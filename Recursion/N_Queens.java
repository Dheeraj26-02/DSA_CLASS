public class N_Queens {    public static void main(String[] args) {        int n=4;        boolean board[][]=new boolean[n][n];        n_queen(board,n,0);    }    public static boolean safe(boolean board[][],int row,int col){        //left diagonal        int r=row;        int c=col;        while(r>=0 && c>=0){            if(board[r][c]==true){                return false;            }            r--;            c--;        }        r=row;        c=col;        //right diagonal        while(r>=0 && c< board[r].length){            if(board[r][c]==true){                return false;            }            r--;            c++;        }        //top        r=row;        c=col;        while(r>=0){            if(board[r][c]==true){                return false;            }            r--;        }        return true;    }    public static void n_queen(boolean board[][],int q,int r) {        if (q == 0) {            print(board);            return;        }        for (int c = 0; c < board.length; c++) {            if (safe(board,r,c)) {                board[r][c] = true;                n_queen(board, q - 1, r + 1);                board[r][c] = false;            }        }    }    public static void print(boolean board[][]){        for(int i=0;i< board.length;i++)        {            for(int j=0;j<board[i].length;j++){                System.out.print(board[i][j]+" ");            }            System.out.println();        }        System.out.println();    }}